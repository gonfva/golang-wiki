# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: golang
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - setup-go-workspace

    # Gets the dependencies
    - script:
        name: go get
        code: go get

    # Build the project
    - script:
        name: go build
        code: CGO_ENABLED=0 go build -a -ldflags '-s' -installsuffix cgo -o app .

    - script:
        name: create wiki-controller
        code: sed -i "s/WERCKER_GIT_COMMIT/$WERCKER_GIT_COMMIT/g" wiki-controller.json

    - script:
        name: copy binary
        code: cp app wiki-service.json wiki-controller.json "$WERCKER_OUTPUT_DIR"

registry-push:
  box: google/golang
  steps:
  - internal/docker-scratch-push:
      username: $USERNAME
      password: $PASSWORD
      tag: $WERCKER_GIT_COMMIT
      repository: gonfva/golang-wiki
      ports: 8080
      registry: https://registry.hub.docker.com/v2

initializing:
  steps:
  - kubectl:
      server: $KUBERNETES_MASTER
      token: $KUBERNETES_TOKEN
      insecure-skip-tls-verify: true
      command: apply -f wiki-service.json --validate=false

  - kubectl:
      server: $KUBERNETES_MASTER
      token: $KUBERNETES_TOKEN
      insecure-skip-tls-verify: true
      command: apply -f wiki-controller.json --validate=false

rolling-update:
  steps:
  - kubectl:
      server: $KUBERNETES_MASTER
      token: $KUBERNETES_TOKEN
      insecure-skip-tls-verify: true
      command: rolling-update wikis --validate=false --image-pull-policy Always
      image: registry.hub.docker.com/gonfva/golang-wiki:$WERCKER_GIT_COMMIT
